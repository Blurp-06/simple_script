// Helpers.
space = _{" " | "\t"}

// Data types.
type_int = {"-"? ~ ASCII_DIGIT+}
type_string = {"\x22" ~ ('\x00'..'\x21' | "\x5c\x22" | '\x23'..'\x7E')* ~ "\x22"} // 0x22 == "
type_float = {"-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+}
type_bool = {"true" | "false"}
all_types = _{type_float | type_int | type_bool | type_string}

// Variable decl.
var_types = {all_types | func_call_decl | var_name}
var_name = {(ASCII_ALPHA | "_")+}
var_decl_assign = {"var" ~ space+ ~ var_name ~ space* ~ "=" ~ space* ~ var_types}
var_empty_decl = {"var" ~ space+ ~ var_name}
var_reassign_decl = {var_name ~ space* ~ "=" ~ space* ~ var_types}

// Comment decl.
comment_decl = _{"<" ~ ('\x20'..'\x3B' | "=" | '\x3F'..'\x7E')* ~ ">"}

// Calling of functions.
func_call_arg_types = _{func_call_decl | all_types | var_name}
func_call_name = {(ASCII_ALPHA | "_")+}
func_call_args = {space* ~ (func_call_arg_types)? ~ space* ~ ("," ~ space* ~ func_call_arg_types)*}
func_call_decl = {func_call_name ~ space* ~ "(" ~ func_call_args ~ space* ~ ")"}

// Control statements.
if_types = _{type_bool | func_call_decl | var_name}
control_if = {"if" ~ space+ ~ if_types ~ space* ~ "{" ~ space* ~ NEWLINE+ ~ (line ~ NEWLINE+)* ~ space* ~ "}"}

// Own function.
func_make_decl = {"function" ~ space+ ~ func_call_name ~ space* ~ "(" ~ ")" ~ space* ~ "{" ~ NEWLINE+ ~ (line ~ NEWLINE+)* ~ space* ~ "}"}

// Debug.
debug_var = {"debug.var"}
debug = {debug_var}

// Final form.
line = {space* ~ (debug | comment_decl | var_decl_assign | var_empty_decl | var_reassign_decl | func_call_decl | control_if | func_make_decl | space+) ~ space*}
ast = _{SOI ~ (line ~ NEWLINE+)* ~ EOI}